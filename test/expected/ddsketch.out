\set ECHO none
-- SRF function implementing a simple deterministict PRNG
CREATE OR REPLACE FUNCTION prng(nrows int, seed int = 23982, p1 bigint = 16807, p2 bigint = 0, n bigint = 2147483647) RETURNS SETOF double precision AS $$
DECLARE
    val INT := seed;
BEGIN
    FOR i IN 1..nrows LOOP
        val := (val * p1 + p2) % n;

        RETURN NEXT (val::double precision / n);
    END LOOP;

    RETURN;
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION random_normal(nrows int, mean double precision = 0.5, stddev double precision = 0.1, minval double precision = 0.0, maxval double precision = 1.0, seed int = 23982, p1 bigint = 16807, p2 bigint = 0, n bigint = 2147483647) RETURNS SETOF double precision AS $$
DECLARE
    v BIGINT := seed;
    x DOUBLE PRECISION;
    y DOUBLE PRECISION;
    s DOUBLE PRECISION;
    r INT := nrows;
BEGIN

    WHILE true LOOP

        -- random x
        v := (v * p1 + p2) % n;
        x := 2 * v / n::double precision - 1.0;

        -- random y
        v := (v * p1 + p2) % n;
        y := 2 * v / n::double precision - 1.0;

        s := x^2 + y^2;

        IF s != 0.0 AND s < 1.0 THEN

            s = sqrt(-2 * ln(s) / s);

            x := mean + stddev * s * x;

            IF x >= minval AND x <= maxval THEN
                RETURN NEXT x;
                r := r - 1;
            END IF;

            EXIT WHEN r = 0;

            y := mean + stddev * s * y;

            IF y >= minval AND y <= maxval THEN
                RETURN NEXT y;
                r := r - 1;
            END IF;

            EXIT WHEN r = 0;

        END IF;

    END LOOP;

END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION relative_error(estimated_value double precision, actual_value double precision) RETURNS double precision AS $$
BEGIN
    return abs(estimated_value - actual_value) / abs(actual_value);
END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION check_relative_error(estimated_value double precision, actual_value double precision, allowed_error double precision) RETURNS bool AS $$
DECLARE
    err double precision;
BEGIN

    IF ((estimated_value < 0) AND (actual_value > 0)) OR ((estimated_value > 0) AND (actual_value < 0)) THEN
        RETURN NULL;
    END IF;

    err := relative_error(estimated_value, actual_value);

    RETURN (err < allowed_error);

END;
$$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION print_relative_error(estimated_value double precision, actual_value double precision, allowed_error double precision) RETURNS text AS $$
DECLARE
    err double precision;
BEGIN

    IF ((estimated_value < 0) AND (actual_value > 0)) OR ((estimated_value > 0) AND (actual_value < 0)) THEN
        RETURN format('estimate = %s, actual = %s', estimated_value, actual_value);
    END IF;

    err := relative_error(estimated_value, actual_value);

    IF err < allowed_error THEN
        RETURN NULL;
    END IF;

    RETURN format('estimate = %s, actual = %s, error = %s', estimated_value, actual_value, err);

END;
$$ LANGUAGE plpgsql;
-----------------------------------------------------------
-- nice data set with ordered (asc) / evenly-spaced data --
-----------------------------------------------------------
-- alpha = 0.05
WITH data AS (SELECT i AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000  AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT i AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- 0.001 alpha
WITH data AS (SELECT i AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(1,100000) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(1,100000) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

------------------------------------------------------------
-- nice data set with ordered (desc) / evenly-spaced data --
------------------------------------------------------------
-- 0.05 alpha
WITH data AS (SELECT i AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT i AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.001
WITH data AS (SELECT i AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(100000,1,-1) s(i))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(100000,1,-1) s(i)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

----------------------------------------------------
-- nice data set with random / evenly-spaced data --
----------------------------------------------------
-- alpha 0.05
WITH data AS (SELECT i AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT i AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.001
WITH data AS (SELECT i AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo)
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT i AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 50000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT i - 100000 AS x FROM (SELECT generate_series(1,100000) AS i, prng(100000, 49979693) AS x ORDER BY x) foo),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

----------------------------------------------
-- nice data set with random data (uniform) --
----------------------------------------------
-- alpha 0.05
WITH data AS (SELECT 100000 * x AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * x - 50000 AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * x - 100000 AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * x AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * x - 50000 AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * x - 100000 AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT 100000 * x AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * x - 50000 AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * x - 100000 AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * x AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * x - 50000 AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * x - 100000 AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.001
WITH data AS (SELECT 100000 * x AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * x - 50000 AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * x - 100000 AS x FROM prng(100000) s(x))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * x AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * x - 50000 AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * x - 100000 AS x FROM prng(100000) s(x)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

--------------------------------------------------
-- nice data set with random data (skewed sqrt) --
--------------------------------------------------
-- alpha 0.05
WITH data AS (SELECT 100000 * sqrt(z) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 100000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * sqrt(z) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 100000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT 100000 * sqrt(z) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 100000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * sqrt(z) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 100000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- 0.001 alpha
WITH data AS (SELECT 100000 * sqrt(z) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * sqrt(z) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(z) - 100000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-------------------------------------------------------
-- nice data set with random data (skewed sqrt+sqrt) --
-------------------------------------------------------
-- alpha 0.05
WITH data AS (SELECT 100000 * sqrt(sqrt(z)) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 100000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * sqrt(sqrt(z)) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 100000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT 100000 * sqrt(sqrt(z)) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 100000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * sqrt(sqrt(z)) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 100000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.001
WITH data AS (SELECT 100000 * sqrt(sqrt(z)) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 100000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * sqrt(sqrt(z)) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * sqrt(sqrt(z)) - 100000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-------------------------------------------------
-- nice data set with random data (skewed pow) --
-------------------------------------------------
-- alpha 0.05
WITH data AS (SELECT 100000 * pow(z, 2) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * pow(z, 2) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 2) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * pow(z, 2) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT 100000 * pow(z, 2) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * pow(z, 2) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 2) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * pow(z, 2) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- 0.001 alpha
WITH data AS (SELECT 100000 * pow(z, 2) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * pow(z, 2) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 2) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * pow(z, 2) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-----------------------------------------------------
-- nice data set with random data (skewed pow+pow) --
-----------------------------------------------------
-- 0.05 alpha
WITH data AS (SELECT 100000 * pow(z, 4) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * pow(z, 4) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 4) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * pow(z, 4) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- alpha 0.01
WITH data AS (SELECT 100000 * pow(z, 4) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 2048, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * pow(z, 4) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 4) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 2048, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * pow(z, 4) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- 0.001 alpha
WITH data AS (SELECT 100000 * pow(z, 4) AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 16384, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT 100000 * pow(z, 4) - 50000 AS x FROM prng(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 4) AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 16384, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

WITH data AS (SELECT 100000 * pow(z, 4) - 50000 AS x FROM prng(100000) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 8192, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

----------------------------------------------------------
-- nice data set with random data (normal distribution) --
----------------------------------------------------------
-- 0.05 alpha
WITH data AS (SELECT 100000 * pow(z, 3) AS x FROM random_normal(100000, mean := 0.0, stddev := 0.1, minval := -1.0, maxval := 1.0) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 3) AS x FROM random_normal(100000, mean := 0.0, stddev := 0.1, minval := -1.0, maxval := 1.0) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.05, 1024, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- 0.01 alpha
WITH data AS (SELECT 100000 * pow(z, 3) AS x FROM random_normal(100000, mean := 0.0, stddev := 0.1, minval := -1.0, maxval := 1.0) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.01, 4096, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 3) AS x FROM random_normal(100000, mean := 0.0, stddev := 0.1, minval := -1.0, maxval := 1.0) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.01, 4096, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- 0.001 alpha
WITH data AS (SELECT 100000 * pow(z, 3) AS x FROM random_normal(100000, mean := 0.0, stddev := 0.1, minval := -1.0, maxval := 1.0) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.001, 32768, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- make sure the resulting percentiles are in the right order
WITH data AS (SELECT 100000 * pow(z, 3) AS x FROM random_normal(100000, mean := 0.0, stddev := 0.1, minval := -1.0, maxval := 1.0) s(z)),
     perc AS (SELECT array_agg((i/100.0)::double precision) AS p FROM generate_series(1,99) s(i))
SELECT * FROM (
    SELECT
        p,
        a,
        LAG(a) OVER (ORDER BY p) AS b
    FROM (
        SELECT
            unnest((SELECT p FROM perc)) AS p,
            unnest(ddsketch_percentile(x, 0.001, 32768, (SELECT p FROM perc))) AS a
        FROM data
    ) foo ) bar WHERE a < b;
 p | a | b 
---+---+---
(0 rows)

-- some basic tests to verify transforming from and to text work
-- 0.05 alpha
WITH data AS (SELECT i AS x FROM generate_series(1,100000) s(i)),
     intermediate AS (SELECT ddsketch(x, 0.05, 1024)::text AS intermediate_x FROM data),
     ddsketch_parsed AS (SELECT ddsketch_percentile(intermediate_x::ddsketch, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS a FROM intermediate),
     pg_percentile AS (SELECT percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x) AS b FROM data)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(a) AS a,
        unnest(b) AS b
    FROM ddsketch_parsed,
         pg_percentile
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 50000 AS x FROM generate_series(1,100000) s(i)),
     intermediate AS (SELECT ddsketch(x, 0.05, 1024)::text AS intermediate_x FROM data),
     ddsketch_parsed AS (SELECT ddsketch_percentile(intermediate_x::ddsketch, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS a FROM intermediate),
     pg_percentile AS (SELECT percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x) AS b FROM data)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(a) AS a,
        unnest(b) AS b
    FROM ddsketch_parsed,
         pg_percentile
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

WITH data AS (SELECT i - 100000 AS x FROM generate_series(1,100000) s(i)),
     intermediate AS (SELECT ddsketch(x, 0.05, 1024)::text AS intermediate_x FROM data),
     ddsketch_parsed AS (SELECT ddsketch_percentile(intermediate_x::ddsketch, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS a FROM intermediate),
     pg_percentile AS (SELECT percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x) AS b FROM data)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(a) AS a,
        unnest(b) AS b
    FROM ddsketch_parsed,
         pg_percentile
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- verify we can store ddsketch in a summary table
CREATE TABLE intermediate_ddsketch (grouping int, summary ddsketch);
WITH data AS (SELECT row_number() OVER () AS i, 1.0 + pow(z, 4) AS x FROM random_normal(100000) s(z))
INSERT INTO intermediate_ddsketch
SELECT
    i % 10 AS grouping,
    ddsketch(x, 0.05, 1024) AS summary
FROM data
GROUP BY i % 10;
WITH data AS (SELECT 1.0 + pow(z, 4) AS x FROM random_normal(100000) s(z)),
     intermediate AS (SELECT ddsketch_percentile(summary, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS a FROM intermediate_ddsketch),
     pg_percentile AS (SELECT percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY x) AS b FROM data)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(a) AS a,
        unnest(b) AS b
    FROM intermediate,
         pg_percentile
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- verify we can store ddsketch in a summary table (individual percentiles)
TRUNCATE intermediate_ddsketch;
WITH data AS (SELECT row_number() OVER () AS i, 100 * pow(z, 4) AS x FROM random_normal(100000) s(z))
INSERT INTO intermediate_ddsketch
SELECT
    i % 10 AS grouping,
    ddsketch(x, 0.05, 1024) AS summary
FROM data
GROUP BY i % 10;
WITH data AS (SELECT 100 * pow(z, 4) AS x FROM random_normal(100000) s(z))
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        foo.p AS p,
        (SELECT ddsketch_percentile(summary, foo.p) FROM intermediate_ddsketch) AS a,
        (SELECT percentile_disc(p) WITHIN GROUP (ORDER BY x) AS b FROM data) AS b
    FROM
         (SELECT unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) p) foo
) bar;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- verify 'extreme' percentiles for the dataset would not read out of bounds on the centroids
WITH data AS (SELECT x FROM generate_series(1,10) AS x)
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.99]) AS p,
        unnest(ddsketch_percentile(x, 0.05, 1024, ARRAY[0.01, 0.99])) AS a,
        unnest(percentile_disc(ARRAY[0.01, 0.99]) WITHIN GROUP (ORDER BY x)) AS b
    FROM data
) foo;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.99 | t           | 
(2 rows)

-- check that the computed percentiles are perfectly correlated (don't decrease for higher p values)
-- first test on a tiny ddsketch with all centroids having count = 1
WITH
-- percentiles to compute
perc AS (SELECT array_agg((i / 100.0)::double precision) AS percentiles FROM generate_series(1,99) s(i)),
-- input data (just 15 points)
input_data AS (select i::double precision AS val FROM generate_series(1,15) s(i))
SELECT * FROM (
    SELECT p, v AS v1, lag(v, 1) OVER (ORDER BY p) v2 FROM (
        SELECT
            unnest(perc.percentiles) p,
            unnest(ddsketch_percentile(input_data.val, 0.05, 1024, perc.percentiles)) v
        FROM perc, input_data
        GROUP BY perc.percentiles
    ) foo
) bar where v2 > v1;
 p | v1 | v2 
---+----+----
(0 rows)

-- <value,count> API
select ddsketch_percentile(value, count, 0.05, 1024, ARRAY[0.9, 0.95, 0.99])
from (values
  (47325940488,1),
  (15457695432,2),
  (6889790700,3),
  (4188763788,4),
  (2882932224,5),
  (2114815860,6),
  (1615194324,7),
  (2342114568,9),
  (1626471924,11),
  (1660755408,14),
  (1143728292,17),
  (1082582424,21),
  (911488284,26),
  (728863908,32),
  (654898692,40),
  (530198076,50),
  (417883440,62),
  (341452344,77),
  (274579584,95),
  (231921120,118),
  (184091820,146),
  (152469828,181),
  (125634972,224),
  (107059704,278),
  (88746120,345),
  (73135668,428),
  (61035756,531),
  (50683320,658),
  (42331824,816),
  (35234400,1012),
  (29341356,1255),
  (24290928,1556),
  (20284668,1929),
  (17215908,2391),
  (14737488,2964),
  (12692772,3674),
  (11220732,4555),
  (9787584,5647),
  (8148420,7000),
  (6918612,8678),
  (6015000,10758),
  (5480316,13336),
  (5443356,16532),
  (4535616,20494),
  (3962316,25406),
  (3914484,31495),
  (3828108,39043),
  (3583536,48400),
  (4104120,60000),
  (166024740,2147483647)) foo (count, value);
                    ddsketch_percentile                    
-----------------------------------------------------------
 {10.493014090054544,25.828042957905442,233.5268188136454}
(1 row)

----------------------------------------------
-- nice data set with random data (uniform) --
----------------------------------------------
-- 0.05 alpha
WITH
 data AS (SELECT prng(10000) x, prng(10000, 29823218) cnt),
 data_expanded AS (SELECT x FROM (SELECT x, generate_series(1, (10 + 100 * cnt)::int) FROM data) foo ORDER BY random())
SELECT
    p,
    check_relative_error(a, b, 0.05) AS check_error,
    print_relative_error(a, b, 0.05) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(a) AS a,
        unnest(b) AS b
    FROM
       (SELECT percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY 1.0 + x) a FROM data_expanded) foo,
       (SELECT ddsketch_percentile(1.0 + x, (10 + 100 * cnt)::int, 0.05, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) b FROM data) bar
) baz;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- 0.01 alpha
WITH
 data AS (SELECT prng(10000) x, prng(10000, 29823218) cnt),
 data_expanded AS (SELECT x FROM (SELECT x, generate_series(1, (10 + 100 * cnt)::int) FROM data) foo ORDER BY random())
SELECT
    p,
    check_relative_error(a, b, 0.01) AS check_error,
    print_relative_error(a, b, 0.01) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(a) AS a,
        unnest(b) AS b
    FROM
       (SELECT percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY 1.0 + x) a FROM data_expanded) foo,
       (SELECT ddsketch_percentile(1.0 + x, (10 + 100 * cnt)::int, 0.01, 1024, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) b FROM data) bar
) baz;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- 0.001 alpha
WITH
 data AS (SELECT prng(10000) x, prng(10000, 29823218) cnt),
 data_expanded AS (SELECT x FROM (SELECT x, generate_series(1, (10 + 100 * cnt)::int) FROM data) foo ORDER BY random())
SELECT
    p,
    check_relative_error(a, b, 0.001) AS check_error,
    print_relative_error(a, b, 0.001) AS error_info
FROM (
    SELECT
        unnest(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) AS p,
        unnest(a) AS a,
        unnest(b) AS b
    FROM
       (SELECT percentile_disc(ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) WITHIN GROUP (ORDER BY 1.0 + x) a FROM data_expanded) foo,
       (SELECT ddsketch_percentile(1.0 + x, (10 + 100 * cnt)::int, 0.001, 8192, ARRAY[0.01, 0.05, 0.1, 0.9, 0.95, 0.99]) b FROM data) bar
) baz;
  p   | check_error | error_info 
------+-------------+------------
 0.01 | t           | 
 0.05 | t           | 
  0.1 | t           | 
  0.9 | t           | 
 0.95 | t           | 
 0.99 | t           | 
(6 rows)

-- test incremental API (adding values one by one)
CREATE TABLE t (d ddsketch);
INSERT INTO t VALUES (NULL);
-- check this produces the same result building the ddsketch at once
DO LANGUAGE plpgsql $$
DECLARE
  r RECORD;
BEGIN
    FOR r IN (SELECT i FROM generate_series(1,1000) s(i) ORDER BY md5(i::text)) LOOP
        UPDATE t SET d = ddsketch_add(d, r.i, 0.05, 1024);
    END LOOP;
END$$;
-- compare the results, but do force a compaction of the incremental result
WITH x AS (SELECT i FROM generate_series(1,1000) s(i) ORDER BY md5(i::text))
SELECT (SELECT ddsketch(d)::text FROM t) = (SELECT ddsketch(x.i, 0.05, 1024)::text FROM x) AS match;
 match 
-------
 t
(1 row)

-- now try the same thing with bulk incremental update (using arrays)
TRUNCATE t;
INSERT INTO t VALUES (NULL);
DO LANGUAGE plpgsql $$
DECLARE
  r RECORD;
BEGIN
    FOR r IN (SELECT a, array_agg(i::double precision) AS v FROM (SELECT mod(i,5) AS a, i FROM generate_series(1,1000) s(i) ORDER BY mod(i,5), md5(i::text)) foo GROUP BY a ORDER BY a) LOOP
        UPDATE t SET d = ddsketch_add(d, r.v, 0.05, 1024);
    END LOOP;
END$$;
-- compare the results, but do force a compaction of the incremental result
WITH x AS (SELECT mod(i,5) AS a, i::double precision AS d FROM generate_series(1,1000) s(i) ORDER BY mod(i,5), i)
SELECT (SELECT ddsketch(d)::text FROM t) = (SELECT ddsketch(x.d, 0.05, 1024)::text FROM x);
 ?column? 
----------
 t
(1 row)

-- now try the same thing with bulk incremental update (using ddsketches)
TRUNCATE t;
INSERT INTO t VALUES (NULL);
DO LANGUAGE plpgsql $$
DECLARE
  r RECORD;
BEGIN
    FOR r IN (SELECT a, ddsketch(i, 0.05, 1024) AS d FROM (SELECT mod(i,5) AS a, i FROM generate_series(1,1000) s(i) ORDER BY mod(i,5), md5(i::text)) foo GROUP BY a ORDER BY a) LOOP
        UPDATE t SET d = ddsketch_union(d, r.d);
    END LOOP;
END$$;
-- compare the results, but do force a compaction of the incremental result
WITH x AS (SELECT a, ddsketch(i, 0.05, 1024) AS d FROM (SELECT mod(i,5) AS a, i FROM generate_series(1,1000) s(i) ORDER BY mod(i,5), md5(i::text)) foo GROUP BY a ORDER BY a)
SELECT (SELECT ddsketch(d)::text FROM t) = (SELECT ddsketch(x.d)::text FROM x);
 ?column? 
----------
 t
(1 row)

-- hypothetical-set aggregates
--
-- there's no guarantee for relative-errors of hypothetical-aggregates,
-- but for uniform distribution it's fairly close to the relative error
-- the ddsketch was defined with
WITH
  data AS (SELECT i / 100.0 AS v FROM generate_series(1,100000) s(i)), 
  sketch AS (SELECT ddsketch(data.v, 0.05, 1024) AS s FROM data)
SELECT
  v,
  check_relative_error(a, b, 0.06) AS check_error,
  print_relative_error(a, b, 0.06) AS error_info
FROM (
  SELECT
    foo.v,
    (SELECT ddsketch_percentile_of(sketch.s, foo.v) FROM sketch) a,
    (SELECT percent_rank(foo.v) WITHIN GROUP (ORDER BY v) FROM data) b
  FROM
    (SELECT i * 10.0 AS v FROM generate_series(1,99) s(i)) foo
) bar;
   v   | check_error | error_info 
-------+-------------+------------
  10.0 | t           | 
  20.0 | t           | 
  30.0 | t           | 
  40.0 | t           | 
  50.0 | t           | 
  60.0 | t           | 
  70.0 | t           | 
  80.0 | t           | 
  90.0 | t           | 
 100.0 | t           | 
 110.0 | t           | 
 120.0 | t           | 
 130.0 | t           | 
 140.0 | t           | 
 150.0 | t           | 
 160.0 | t           | 
 170.0 | t           | 
 180.0 | t           | 
 190.0 | t           | 
 200.0 | t           | 
 210.0 | t           | 
 220.0 | t           | 
 230.0 | t           | 
 240.0 | t           | 
 250.0 | t           | 
 260.0 | t           | 
 270.0 | t           | 
 280.0 | t           | 
 290.0 | t           | 
 300.0 | t           | 
 310.0 | t           | 
 320.0 | t           | 
 330.0 | t           | 
 340.0 | t           | 
 350.0 | t           | 
 360.0 | t           | 
 370.0 | t           | 
 380.0 | t           | 
 390.0 | t           | 
 400.0 | t           | 
 410.0 | t           | 
 420.0 | t           | 
 430.0 | t           | 
 440.0 | t           | 
 450.0 | t           | 
 460.0 | t           | 
 470.0 | t           | 
 480.0 | t           | 
 490.0 | t           | 
 500.0 | t           | 
 510.0 | t           | 
 520.0 | t           | 
 530.0 | t           | 
 540.0 | t           | 
 550.0 | t           | 
 560.0 | t           | 
 570.0 | t           | 
 580.0 | t           | 
 590.0 | t           | 
 600.0 | t           | 
 610.0 | t           | 
 620.0 | t           | 
 630.0 | t           | 
 640.0 | t           | 
 650.0 | t           | 
 660.0 | t           | 
 670.0 | t           | 
 680.0 | t           | 
 690.0 | t           | 
 700.0 | t           | 
 710.0 | t           | 
 720.0 | t           | 
 730.0 | t           | 
 740.0 | t           | 
 750.0 | t           | 
 760.0 | t           | 
 770.0 | t           | 
 780.0 | t           | 
 790.0 | t           | 
 800.0 | t           | 
 810.0 | t           | 
 820.0 | t           | 
 830.0 | t           | 
 840.0 | t           | 
 850.0 | t           | 
 860.0 | t           | 
 870.0 | t           | 
 880.0 | t           | 
 890.0 | t           | 
 900.0 | t           | 
 910.0 | t           | 
 920.0 | t           | 
 930.0 | t           | 
 940.0 | t           | 
 950.0 | t           | 
 960.0 | t           | 
 970.0 | t           | 
 980.0 | t           | 
 990.0 | t           | 
(99 rows)

WITH
  data AS (SELECT mod(i,10) as x, i / 100.0 AS v FROM generate_series(1,100000) s(i)), 
  sketches AS (SELECT ddsketch(data.v, 0.05, 1024) AS s FROM data GROUP BY data.x)
SELECT
  v,
  check_relative_error(a, b, 0.06) AS check_error,
  print_relative_error(a, b, 0.06) AS error_info
FROM (
  SELECT
    foo.v,
    (SELECT ddsketch_percentile_of(sketches.s, foo.v) FROM sketches) a,
    (SELECT percent_rank(foo.v) WITHIN GROUP (ORDER BY v) FROM data) b
  FROM
    (SELECT i * 10.0 AS v FROM generate_series(1,99) s(i)) foo
) bar;
   v   | check_error | error_info 
-------+-------------+------------
  10.0 | t           | 
  20.0 | t           | 
  30.0 | t           | 
  40.0 | t           | 
  50.0 | t           | 
  60.0 | t           | 
  70.0 | t           | 
  80.0 | t           | 
  90.0 | t           | 
 100.0 | t           | 
 110.0 | t           | 
 120.0 | t           | 
 130.0 | t           | 
 140.0 | t           | 
 150.0 | t           | 
 160.0 | t           | 
 170.0 | t           | 
 180.0 | t           | 
 190.0 | t           | 
 200.0 | t           | 
 210.0 | t           | 
 220.0 | t           | 
 230.0 | t           | 
 240.0 | t           | 
 250.0 | t           | 
 260.0 | t           | 
 270.0 | t           | 
 280.0 | t           | 
 290.0 | t           | 
 300.0 | t           | 
 310.0 | t           | 
 320.0 | t           | 
 330.0 | t           | 
 340.0 | t           | 
 350.0 | t           | 
 360.0 | t           | 
 370.0 | t           | 
 380.0 | t           | 
 390.0 | t           | 
 400.0 | t           | 
 410.0 | t           | 
 420.0 | t           | 
 430.0 | t           | 
 440.0 | t           | 
 450.0 | t           | 
 460.0 | t           | 
 470.0 | t           | 
 480.0 | t           | 
 490.0 | t           | 
 500.0 | t           | 
 510.0 | t           | 
 520.0 | t           | 
 530.0 | t           | 
 540.0 | t           | 
 550.0 | t           | 
 560.0 | t           | 
 570.0 | t           | 
 580.0 | t           | 
 590.0 | t           | 
 600.0 | t           | 
 610.0 | t           | 
 620.0 | t           | 
 630.0 | t           | 
 640.0 | t           | 
 650.0 | t           | 
 660.0 | t           | 
 670.0 | t           | 
 680.0 | t           | 
 690.0 | t           | 
 700.0 | t           | 
 710.0 | t           | 
 720.0 | t           | 
 730.0 | t           | 
 740.0 | t           | 
 750.0 | t           | 
 760.0 | t           | 
 770.0 | t           | 
 780.0 | t           | 
 790.0 | t           | 
 800.0 | t           | 
 810.0 | t           | 
 820.0 | t           | 
 830.0 | t           | 
 840.0 | t           | 
 850.0 | t           | 
 860.0 | t           | 
 870.0 | t           | 
 880.0 | t           | 
 890.0 | t           | 
 900.0 | t           | 
 910.0 | t           | 
 920.0 | t           | 
 930.0 | t           | 
 940.0 | t           | 
 950.0 | t           | 
 960.0 | t           | 
 970.0 | t           | 
 980.0 | t           | 
 990.0 | t           | 
(99 rows)

WITH
  data AS (SELECT i / 100.0 AS v FROM generate_series(1,100000) s(i)), 
  sketch AS (SELECT ddsketch(data.v, 0.05, 1024) AS s FROM data),
  vals AS (SELECT array_agg(i * 10.0) AS v FROM generate_series(1,99) s(i)),
  sketch_values AS (SELECT ddsketch_percentile_of(sketch.s, vals.v) AS v FROM sketch, vals),
  percent_ranks AS (SELECT array_agg((SELECT percent_rank(i * 10.0) WITHIN GROUP (ORDER BY v) FROM data)) AS v FROM generate_series(1,99) s(i))
SELECT
  v,
  check_relative_error(a, b, 0.06) AS check_error,
  print_relative_error(a, b, 0.06) AS error_info
FROM (
  SELECT
    unnest(vals.v) as v,
    unnest(sketch_values.v) as a,
    unnest(percent_ranks.v) as b
  FROM
    vals, sketch_values, percent_ranks
) bar;
   v   | check_error | error_info 
-------+-------------+------------
  10.0 | t           | 
  20.0 | t           | 
  30.0 | t           | 
  40.0 | t           | 
  50.0 | t           | 
  60.0 | t           | 
  70.0 | t           | 
  80.0 | t           | 
  90.0 | t           | 
 100.0 | t           | 
 110.0 | t           | 
 120.0 | t           | 
 130.0 | t           | 
 140.0 | t           | 
 150.0 | t           | 
 160.0 | t           | 
 170.0 | t           | 
 180.0 | t           | 
 190.0 | t           | 
 200.0 | t           | 
 210.0 | t           | 
 220.0 | t           | 
 230.0 | t           | 
 240.0 | t           | 
 250.0 | t           | 
 260.0 | t           | 
 270.0 | t           | 
 280.0 | t           | 
 290.0 | t           | 
 300.0 | t           | 
 310.0 | t           | 
 320.0 | t           | 
 330.0 | t           | 
 340.0 | t           | 
 350.0 | t           | 
 360.0 | t           | 
 370.0 | t           | 
 380.0 | t           | 
 390.0 | t           | 
 400.0 | t           | 
 410.0 | t           | 
 420.0 | t           | 
 430.0 | t           | 
 440.0 | t           | 
 450.0 | t           | 
 460.0 | t           | 
 470.0 | t           | 
 480.0 | t           | 
 490.0 | t           | 
 500.0 | t           | 
 510.0 | t           | 
 520.0 | t           | 
 530.0 | t           | 
 540.0 | t           | 
 550.0 | t           | 
 560.0 | t           | 
 570.0 | t           | 
 580.0 | t           | 
 590.0 | t           | 
 600.0 | t           | 
 610.0 | t           | 
 620.0 | t           | 
 630.0 | t           | 
 640.0 | t           | 
 650.0 | t           | 
 660.0 | t           | 
 670.0 | t           | 
 680.0 | t           | 
 690.0 | t           | 
 700.0 | t           | 
 710.0 | t           | 
 720.0 | t           | 
 730.0 | t           | 
 740.0 | t           | 
 750.0 | t           | 
 760.0 | t           | 
 770.0 | t           | 
 780.0 | t           | 
 790.0 | t           | 
 800.0 | t           | 
 810.0 | t           | 
 820.0 | t           | 
 830.0 | t           | 
 840.0 | t           | 
 850.0 | t           | 
 860.0 | t           | 
 870.0 | t           | 
 880.0 | t           | 
 890.0 | t           | 
 900.0 | t           | 
 910.0 | t           | 
 920.0 | t           | 
 930.0 | t           | 
 940.0 | t           | 
 950.0 | t           | 
 960.0 | t           | 
 970.0 | t           | 
 980.0 | t           | 
 990.0 | t           | 
(99 rows)

WITH
  data AS (SELECT mod(i,10) AS x, i / 100.0 AS v FROM generate_series(1,100000) s(i)), 
  sketches AS (SELECT ddsketch(data.v, 0.05, 1024) AS s FROM data GROUP BY x),
  vals AS (SELECT array_agg(i * 10.0) AS v FROM generate_series(1,99) s(i)),
  sketch_values AS (SELECT ddsketch_percentile_of(sketches.s, vals.v) AS v FROM sketches, vals),
  percent_ranks AS (SELECT array_agg((SELECT percent_rank(i * 10.0) WITHIN GROUP (ORDER BY v) FROM data)) AS v FROM generate_series(1,99) s(i))
SELECT
  v,
  check_relative_error(a, b, 0.06) AS check_error,
  print_relative_error(a, b, 0.06) AS error_info
FROM (
  SELECT
    unnest(vals.v) as v,
    unnest(sketch_values.v) as a,
    unnest(percent_ranks.v) as b
  FROM
    vals, sketch_values, percent_ranks
) bar;
   v   | check_error | error_info 
-------+-------------+------------
  10.0 | t           | 
  20.0 | t           | 
  30.0 | t           | 
  40.0 | t           | 
  50.0 | t           | 
  60.0 | t           | 
  70.0 | t           | 
  80.0 | t           | 
  90.0 | t           | 
 100.0 | t           | 
 110.0 | t           | 
 120.0 | t           | 
 130.0 | t           | 
 140.0 | t           | 
 150.0 | t           | 
 160.0 | t           | 
 170.0 | t           | 
 180.0 | t           | 
 190.0 | t           | 
 200.0 | t           | 
 210.0 | t           | 
 220.0 | t           | 
 230.0 | t           | 
 240.0 | t           | 
 250.0 | t           | 
 260.0 | t           | 
 270.0 | t           | 
 280.0 | t           | 
 290.0 | t           | 
 300.0 | t           | 
 310.0 | t           | 
 320.0 | t           | 
 330.0 | t           | 
 340.0 | t           | 
 350.0 | t           | 
 360.0 | t           | 
 370.0 | t           | 
 380.0 | t           | 
 390.0 | t           | 
 400.0 | t           | 
 410.0 | t           | 
 420.0 | t           | 
 430.0 | t           | 
 440.0 | t           | 
 450.0 | t           | 
 460.0 | t           | 
 470.0 | t           | 
 480.0 | t           | 
 490.0 | t           | 
 500.0 | t           | 
 510.0 | t           | 
 520.0 | t           | 
 530.0 | t           | 
 540.0 | t           | 
 550.0 | t           | 
 560.0 | t           | 
 570.0 | t           | 
 580.0 | t           | 
 590.0 | t           | 
 600.0 | t           | 
 610.0 | t           | 
 620.0 | t           | 
 630.0 | t           | 
 640.0 | t           | 
 650.0 | t           | 
 660.0 | t           | 
 670.0 | t           | 
 680.0 | t           | 
 690.0 | t           | 
 700.0 | t           | 
 710.0 | t           | 
 720.0 | t           | 
 730.0 | t           | 
 740.0 | t           | 
 750.0 | t           | 
 760.0 | t           | 
 770.0 | t           | 
 780.0 | t           | 
 790.0 | t           | 
 800.0 | t           | 
 810.0 | t           | 
 820.0 | t           | 
 830.0 | t           | 
 840.0 | t           | 
 850.0 | t           | 
 860.0 | t           | 
 870.0 | t           | 
 880.0 | t           | 
 890.0 | t           | 
 900.0 | t           | 
 910.0 | t           | 
 920.0 | t           | 
 930.0 | t           | 
 940.0 | t           | 
 950.0 | t           | 
 960.0 | t           | 
 970.0 | t           | 
 980.0 | t           | 
 990.0 | t           | 
(99 rows)

-- WITH
--   data AS (SELECT i / 100.0 AS v FROM generate_series(1,100000) s(i)), 
--   sketch AS (SELECT ddsketch(data.v, 0.05, 1024) AS s FROM data)
-- SELECT
--   p,
--   check_relative_error(a, b, 0.05) AS check_error,
--   print_relative_error(a, b, 0.05) AS error_info
-- FROM (
--   SELECT
--     foo.p,
--     (SELECT ddsketch_percentile(sketch.s, foo.p) FROM sketch) a,
--     (SELECT percentile_disc(foo.p) WITHIN GROUP (ORDER BY v) FROM data) b
--   FROM
--     (SELECT i / 100.0 AS p FROM generate_series(1,99) s(i)) foo
-- ) bar;
CREATE TABLE src_data (v double precision);
INSERT INTO src_data SELECT z FROM random_normal(1000000, mean := 0.0, stddev := 0.1, minval := -1.0, maxval := 1.0) s(z);
ANALYZE src_data;
-- with parallelism
EXPLAIN (COSTS OFF) SELECT ddsketch(v, 0.05, 1024) FROM src_data;
                   QUERY PLAN                    
-------------------------------------------------
 Finalize Aggregate
   ->  Gather
         Workers Planned: 2
         ->  Partial Aggregate
               ->  Parallel Seq Scan on src_data
(5 rows)

SELECT ddsketch(v, 0.05, 1024) FROM src_data;
ddsketch

 flags 0 count 1000000 alpha 0.050000 zero_count 0 maxbuckets 1024 buckets 249 125 (-7, 4) (-8, 32) (-9, 103) (-10, 327) (-11, 858) (-12, 1895) (-13, 3717) (-14, 6001) (-15, 8980) (-16, 12259) (-17, 15536) (-18, 18296) (-19, 20888) (-20, 22578) (-21, 23517) (-22, 24164) (-23, 24090) (-24, 23714) (-25, 23172) (-26, 21885) (-27, 20676) (-28, 19489) (-29, 17961) (-30, 16851) (-31, 15550) (-32, 14398) (-33, 13281) (-34, 11984) (-35, 10907) (-36, 10090) (-37, 8955) (-38, 8235) (-39, 7472) (-40, 6939) (-41, 6219) (-42, 5639) (-43, 5174) (-44, 4553) (-45, 4287) (-46, 3727) (-47, 3435) (-48, 3141) (-49, 2831) (-50, 2455) (-51, 2224) (-52, 2085) (-53, 1846) (-54, 1691) (-55, 1573) (-56, 1376) (-57, 1257) (-58, 1136) (-59, 1025) (-60, 876) (-61, 875) (-62, 789) (-63, 672) (-64, 620) (-65, 577) (-66, 530) (-67, 475) (-68, 448) (-69, 395) (-70, 360) (-71, 312) (-72, 274) (-73, 251) (-74, 228) (-75, 197) (-76, 182) (-77, 165) (-78, 167) (-79, 152) (-80, 104) (-81, 133) (-82, 99) (-83, 92) (-84, 79) (-85, 83) (-86, 61) (-87, 53) (-88, 70) (-89, 44) (-90, 56) (-91, 41) (-92, 36) (-93, 39) (-94, 25) (-95, 23) (-96, 18) (-97, 18) (-98, 21) (-99, 21) (-100, 20) (-101, 14) (-102, 10) (-103, 17) (-104, 14) (-105, 8) (-106, 8) (-107, 10) (-108, 10) (-109, 6) (-110, 6) (-111, 10) (-112, 2) (-113, 5) (-114, 3) (-115, 5) (-116, 5) (-117, 9) (-118, 1) (-119, 2) (-120, 2) (-121, 4) (-122, 2) (-123, 2) (-124, 1) (-125, 1) (-126, 1) (-129, 1) (-136, 1) (-139, 1) (-144, 1) (-145, 1) (-147, 1) (-140, 1) (-132, 1) (-131, 1) (-129, 1) (-128, 2) (-126, 1) (-124, 2) (-123, 3) (-122, 5) (-120, 4) (-119, 2) (-118, 6) (-117, 5) (-116, 7) (-115, 8) (-114, 2) (-113, 5) (-112, 4) (-111, 2) (-110, 7) (-109, 6) (-108, 8) (-107, 7) (-106, 7) (-105, 8) (-104, 20) (-103, 6) (-102, 10) (-101, 15) (-100, 14) (-99, 20) (-98, 16) (-97, 18) (-96, 26) (-95, 26) (-94, 28) (-93, 34) (-92, 39) (-91, 31) (-90, 37) (-89, 49) (-88, 62) (-87, 66) (-86, 86) (-85, 82) (-84, 92) (-83, 83) (-82, 105) (-81, 115) (-80, 110) (-79, 156) (-78, 139) (-77, 173) (-76, 188) (-75, 202) (-74, 217) (-73, 253) (-72, 313) (-71, 306) (-70, 370) (-69, 381) (-68, 400) (-67, 456) (-66, 459) (-65, 547) (-64, 682) (-63, 672) (-62, 708) (-61, 844) (-60, 933) (-59, 1084) (-58, 1162) (-57, 1319) (-56, 1418) (-55, 1561) (-54, 1668) (-53, 1907) (-52, 2029) (-51, 2328) (-50, 2530) (-49, 2791) (-48, 3137) (-47, 3488) (-46, 3789) (-45, 4135) (-44, 4561) (-43, 5050) (-42, 5734) (-41, 6237) (-40, 6775) (-39, 7630) (-38, 8354) (-37, 8876) (-36, 10130) (-35, 11065) (-34, 12142) (-33, 13058) (-32, 14156) (-31, 15412) (-30, 16823) (-29, 18064) (-28, 19713) (-27, 20814) (-26, 21869) (-25, 22884) (-24, 23557) (-23, 24104) (-22, 24147) (-21, 23498) (-20, 22283) (-19, 20675) (-18, 18343) (-17, 15364) (-16, 12232) (-15, 9129) (-14, 6015) (-13, 3643) (-12, 1982) (-11, 887) (-10, 303) (-9, 102) (-8, 20) (-7, 6)
(1 row)

-- without  parallelism
SET max_parallel_workers_per_gather = 0;
EXPLAIN (COSTS OFF) SELECT ddsketch(v, 0.05, 1024) FROM src_data;
         QUERY PLAN         
----------------------------
 Aggregate
   ->  Seq Scan on src_data
(2 rows)

SELECT ddsketch(v, 0.05, 1024) FROM src_data;
ddsketch
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 flags 0 count 1000000 alpha 0.050000 zero_count 0 maxbuckets 1024 buckets 249 125 (-7, 4) (-8, 32) (-9, 103) (-10, 327) (-11, 858) (-12, 1895) (-13, 3717) (-14, 6001) (-15, 8980) (-16, 12259) (-17, 15536) (-18, 18296) (-19, 20888) (-20, 22578) (-21, 23517) (-22, 24164) (-23, 24090) (-24, 23714) (-25, 23172) (-26, 21885) (-27, 20676) (-28, 19489) (-29, 17961) (-30, 16851) (-31, 15550) (-32, 14398) (-33, 13281) (-34, 11984) (-35, 10907) (-36, 10090) (-37, 8955) (-38, 8235) (-39, 7472) (-40, 6939) (-41, 6219) (-42, 5639) (-43, 5174) (-44, 4553) (-45, 4287) (-46, 3727) (-47, 3435) (-48, 3141) (-49, 2831) (-50, 2455) (-51, 2224) (-52, 2085) (-53, 1846) (-54, 1691) (-55, 1573) (-56, 1376) (-57, 1257) (-58, 1136) (-59, 1025) (-60, 876) (-61, 875) (-62, 789) (-63, 672) (-64, 620) (-65, 577) (-66, 530) (-67, 475) (-68, 448) (-69, 395) (-70, 360) (-71, 312) (-72, 274) (-73, 251) (-74, 228) (-75, 197) (-76, 182) (-77, 165) (-78, 167) (-79, 152) (-80, 104) (-81, 133) (-82, 99) (-83, 92) (-84, 79) (-85, 83) (-86, 61) (-87, 53) (-88, 70) (-89, 44) (-90, 56) (-91, 41) (-92, 36) (-93, 39) (-94, 25) (-95, 23) (-96, 18) (-97, 18) (-98, 21) (-99, 21) (-100, 20) (-101, 14) (-102, 10) (-103, 17) (-104, 14) (-105, 8) (-106, 8) (-107, 10) (-108, 10) (-109, 6) (-110, 6) (-111, 10) (-112, 2) (-113, 5) (-114, 3) (-115, 5) (-116, 5) (-117, 9) (-118, 1) (-119, 2) (-120, 2) (-121, 4) (-122, 2) (-123, 2) (-124, 1) (-125, 1) (-126, 1) (-129, 1) (-136, 1) (-139, 1) (-144, 1) (-145, 1) (-147, 1) (-140, 1) (-132, 1) (-131, 1) (-129, 1) (-128, 2) (-126, 1) (-124, 2) (-123, 3) (-122, 5) (-120, 4) (-119, 2) (-118, 6) (-117, 5) (-116, 7) (-115, 8) (-114, 2) (-113, 5) (-112, 4) (-111, 2) (-110, 7) (-109, 6) (-108, 8) (-107, 7) (-106, 7) (-105, 8) (-104, 20) (-103, 6) (-102, 10) (-101, 15) (-100, 14) (-99, 20) (-98, 16) (-97, 18) (-96, 26) (-95, 26) (-94, 28) (-93, 34) (-92, 39) (-91, 31) (-90, 37) (-89, 49) (-88, 62) (-87, 66) (-86, 86) (-85, 82) (-84, 92) (-83, 83) (-82, 105) (-81, 115) (-80, 110) (-79, 156) (-78, 139) (-77, 173) (-76, 188) (-75, 202) (-74, 217) (-73, 253) (-72, 313) (-71, 306) (-70, 370) (-69, 381) (-68, 400) (-67, 456) (-66, 459) (-65, 547) (-64, 682) (-63, 672) (-62, 708) (-61, 844) (-60, 933) (-59, 1084) (-58, 1162) (-57, 1319) (-56, 1418) (-55, 1561) (-54, 1668) (-53, 1907) (-52, 2029) (-51, 2328) (-50, 2530) (-49, 2791) (-48, 3137) (-47, 3488) (-46, 3789) (-45, 4135) (-44, 4561) (-43, 5050) (-42, 5734) (-41, 6237) (-40, 6775) (-39, 7630) (-38, 8354) (-37, 8876) (-36, 10130) (-35, 11065) (-34, 12142) (-33, 13058) (-32, 14156) (-31, 15412) (-30, 16823) (-29, 18064) (-28, 19713) (-27, 20814) (-26, 21869) (-25, 22884) (-24, 23557) (-23, 24104) (-22, 24147) (-21, 23498) (-20, 22283) (-19, 20675) (-18, 18343) (-17, 15364) (-16, 12232) (-15, 9129) (-14, 6015) (-13, 3643) (-12, 1982) (-11, 887) (-10, 303) (-9, 102) (-8, 20) (-7, 6)
(1 row)

